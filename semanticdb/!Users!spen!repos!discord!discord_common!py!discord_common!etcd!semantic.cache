;; Object semanticdb-project-database-file-1ffd5cd5fcd0
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-1ffd5cd5fcd0"
  :tables
  (list
    (semanticdb-table "semanticdb-table-1ffd5cd5fcec"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("base64" include nil nil [41 54])
            ("errno" include nil nil [55 67])
            ("json" include nil nil [68 79])
            ("logging" include nil nil [80 94])
            ("os" include nil nil [95 104])
            ("random" include nil nil [105 118])
            ("socket" include nil nil [119 132])
            ("gevent" include nil nil [134 147])
            ("six" include nil nil [148 158])
            ("six.moves.http_client" include nil nil [159 187])
            ("six.moves.urllib.error" include nil nil [188 217])
            ("six.moves.urllib.parse" include nil nil [218 247])
            ("six.moves.urllib.request" include nil nil [248 279])
            ("six.moves" include nil nil [280 305])
            ("" code nil nil [347 511])
            ("ACTION_GET" variable nil nil [513 531])
            ("ACTION_SET" variable nil nil [532 550])
            ("ACTION_CREATE" variable nil nil [551 575])
            ("ACTION_UPDATE" variable nil nil [576 600])
            ("ACTION_DELETE" variable nil nil [601 625])
            ("ACTION_COMPARE_AND_SWAP" variable nil nil [626 668])
            ("ACTION_COMPARE_AND_DELETE" variable nil nil [669 715])
            ("ACTION_EXPIRE" variable nil nil [716 740])
            ("SET_ACTIONS" variable nil nil [742 823])
            ("DELETE_ACTIONS" variable nil nil [824 898])
            ("ETCD_HISTORY_BUFFER_SIZE" variable nil nil [900 931])
            ("log" variable nil nil [933 964])
            ("build_url" function
               (:documentation "Construct a full URL to an Etcd resource.

    :type peers: list[str]
    :type key: str
    :rtype: str
    "
                :arguments 
                  ( ("peers" variable nil (reparse-symbol function_parameters) [981 986])
                    ("key" variable nil (reparse-symbol function_parameters) [988 991]))                  )
                nil [967 1170])
            ("parse_event" function
               (:documentation "Parse an Etcd event or throw exception.

    :type headers: dict
    :type body: str
    :rtype: EtcdEvent
    "
                :arguments 
                  ( ("headers" variable nil (reparse-symbol function_parameters) [1188 1195])
                    ("body" variable nil (reparse-symbol function_parameters) [1197 1201]))                  )
                nil [1172 1929])
            ("EtcdError" type
               (:superclasses ("Exception")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Generic Etcd exception.

        :type code: int
        :type cause: str
        :type index: int
        :type message: str
        \"\"\"" code nil (reparse-symbol indented_block_body) [2020 2160])
                            ("self" variable nil (reparse-symbol indented_block_body) [2169 2185])
                            ("self" variable nil (reparse-symbol indented_block_body) [2194 2212])
                            ("self" variable nil (reparse-symbol indented_block_body) [2221 2239])
                            ("super" code nil (reparse-symbol indented_block_body) [2248 2297]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1976 1980])
                            ("code" variable nil (reparse-symbol function_parameters) [1982 1986])
                            ("cause" variable nil (reparse-symbol function_parameters) [1988 1993])
                            ("index" variable nil (reparse-symbol function_parameters) [1995 2000])
                            ("message" variable nil (reparse-symbol function_parameters) [2002 2009]))                          
                        :documentation "Generic Etcd exception.

        :type code: int
        :type cause: str
        :type index: int
        :type message: str
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1963 2298])
                    ("from_raw" function
                       (:documentation "Convert raw dictionary error to EtcdError.

        :type raw_error: dict
        :rtype: EtcdError
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2333 2336])
                            ("raw_error" variable nil (reparse-symbol function_parameters) [2338 2347]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2303 2825]))                  
                :type "class")
                nil [1931 2825])
            ("KeyNotFoundError" type
               (:superclasses ("EtcdError")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [2866 2870]))                  
                :type "class")
                nil [2827 2871])
            ("CompareFailedError" type
               (:superclasses ("EtcdError")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [2914 2918]))                  
                :type "class")
                nil [2873 2919])
            ("NodeExistsError" type
               (:superclasses ("EtcdError")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [2959 2963]))                  
                :type "class")
                nil [2921 2964])
            ("RequestError" type
               (:superclasses ("EtcdError")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3038 3099]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3014 3018])
                            ("message" variable nil (reparse-symbol function_parameters) [3020 3027]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3001 3100]))                  
                :type "class")
                nil [2966 3100])
            ("Timeout" type
               (:superclasses ("RequestError")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3163 3198]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3148 3152]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3135 3199]))                  
                :type "class")
                nil [3102 3199])
            ("EtcdEvent" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Event from the Etcd storage log.

        :type action: str
        :type node: EtcdNode
        :type prev_node: EtcdNode|None
        :type etcd_index: int|None
        :type raft_index: int|None
        :type raft_term: int|None
        \"\"\"" code nil (reparse-symbol indented_block_body) [3338 3584])
                            ("self" variable nil (reparse-symbol indented_block_body) [3593 3613])
                            ("self" variable nil (reparse-symbol indented_block_body) [3622 3638])
                            ("self" variable nil (reparse-symbol indented_block_body) [3647 3673])
                            ("self" variable nil (reparse-symbol indented_block_body) [3682 3710])
                            ("self" variable nil (reparse-symbol indented_block_body) [3719 3747])
                            ("self" variable nil (reparse-symbol indented_block_body) [3756 3782]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3243 3247])
                            ("action" variable nil (reparse-symbol function_parameters) [3249 3255])
                            ("node" variable nil (reparse-symbol function_parameters) [3257 3261])
                            ("prev_node" variable nil (reparse-symbol function_parameters) [3263 3272])
                            ("etcd_index" variable nil (reparse-symbol function_parameters) [3279 3289])
                            ("raft_index" variable nil (reparse-symbol function_parameters) [3296 3306])
                            ("raft_term" variable nil (reparse-symbol function_parameters) [3313 3322]))                          
                        :documentation "Event from the Etcd storage log.

        :type action: str
        :type node: EtcdNode
        :type prev_node: EtcdNode|None
        :type etcd_index: int|None
        :type raft_index: int|None
        :type raft_term: int|None
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3230 3783])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3801 3805]))                          )
                        (reparse-symbol indented_block_body) [3788 3893]))                  
                :type "class")
                nil [3201 3893])
            ("EtcdNode" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Encapsulated instance of a node.

        :type key: str
        :type value: str|None
        :type directory: bool
        :type created_index: int
        :type modified_index: int
        :type ttl: int|None
        :type expiration: datetime.datetime|None
        :type nodes: list[EtcdNode]
        \"\"\"" code nil (reparse-symbol indented_block_body) [4029 4340])
                            ("self" variable nil (reparse-symbol indented_block_body) [4349 4363])
                            ("self" variable nil (reparse-symbol indented_block_body) [4372 4390])
                            ("self" variable nil (reparse-symbol indented_block_body) [4399 4433])
                            ("self" variable nil (reparse-symbol indented_block_body) [4442 4478])
                            ("self" variable nil (reparse-symbol indented_block_body) [4487 4501])
                            ("self" variable nil (reparse-symbol indented_block_body) [4510 4528]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3936 3940])
                            ("key" variable nil (reparse-symbol function_parameters) [3942 3945])
                            ("value" variable nil (reparse-symbol function_parameters) [3947 3952])
                            ("directory" variable nil (reparse-symbol function_parameters) [3954 3963])
                            ("created_index" variable nil (reparse-symbol function_parameters) [3965 3978])
                            ("modified_index" variable nil (reparse-symbol function_parameters) [3980 3994])
                            ("ttl" variable nil (reparse-symbol function_parameters) [3996 3999])
                            ("expiration" variable nil (reparse-symbol function_parameters) [4001 4011])
                            ("nodes" variable nil (reparse-symbol function_parameters) [4013 4018]))                          
                        :documentation "Encapsulated instance of a node.

        :type key: str
        :type value: str|None
        :type directory: bool
        :type created_index: int
        :type modified_index: int
        :type ttl: int|None
        :type expiration: datetime.datetime|None
        :type nodes: list[EtcdNode]
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3923 4529])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4547 4551]))                          )
                        (reparse-symbol indented_block_body) [4534 4618])
                    ("from_raw" function
                       (:documentation "Convert raw dictionary node to EtcdNode.

        :type raw_node: dict
        :rtype: EtcdNode
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [4653 4656])
                            ("raw_node" variable nil (reparse-symbol function_parameters) [4658 4666]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4623 5319]))                  
                :type "class")
                nil [3895 5319])
            ("EtcdClient" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [5468 5490])
                            ("if" code nil (reparse-symbol indented_block_body) [5500 5612])
                            ("peers" code nil (reparse-symbol indented_block_body) [5621 5691])
                            ("if" code nil (reparse-symbol indented_block_body) [5700 6140])
                            ("self" variable nil (reparse-symbol indented_block_body) [6148 6177])
                            ("self" variable nil (reparse-symbol indented_block_body) [6186 6218]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5364 5368])
                            ("peers" variable nil (reparse-symbol function_parameters) [5370 5375])
                            ("http_timeout" variable nil (reparse-symbol function_parameters) [5382 5394])
                            ("secure" variable nil (reparse-symbol function_parameters) [5399 5405])
                            ("username" variable nil (reparse-symbol function_parameters) [5413 5421])
                            ("password" variable nil (reparse-symbol function_parameters) [5428 5436])
                            ("as_guest" variable nil (reparse-symbol function_parameters) [5443 5451]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5351 6219])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6237 6241]))                          )
                        (reparse-symbol indented_block_body) [6224 6321])
                    ("create" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6337 6341])
                            ("key" variable nil (reparse-symbol function_parameters) [6343 6346])
                            ("value" variable nil (reparse-symbol function_parameters) [6348 6353])
                            ("ttl" variable nil (reparse-symbol function_parameters) [6360 6363])
                            ("sequential" variable nil (reparse-symbol function_parameters) [6370 6380])
                            ("directory" variable nil (reparse-symbol function_parameters) [6388 6397]))                          
                        :documentation "Create a node with all possible options.

        >>> client = EtcdClient()
        >>> event = client.create('/doctest', sequential=True)
        >>> event.node.key == '/doctest/%s' % event.node.modified_index
        True
        >>> client.create('/doctest')
        Traceback (most recent call last):
            ...
        NodeExistsError: /doctest

        :type key: str
        :type value: str|None
        :type ttl: int|None
        :type sequential: bool
        :type directory: bool
        :rtype: EtcdEvent
        ")
                        (reparse-symbol indented_block_body) [6326 7409])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7422 7426])
                            ("key" variable nil (reparse-symbol function_parameters) [7428 7431])
                            ("consistent" variable nil (reparse-symbol function_parameters) [7433 7443])
                            ("quorum" variable nil (reparse-symbol function_parameters) [7451 7457])
                            ("recursive" variable nil (reparse-symbol function_parameters) [7465 7474])
                            ("sorted" variable nil (reparse-symbol function_parameters) [7482 7488])
                            ("prev_index" variable nil (reparse-symbol function_parameters) [7496 7506]))                          
                        :documentation "Get the value of a node.

        >>> client = EtcdClient()
        >>> event = client.get('/')
        >>> event
        <EtcdEvent: get@/>
        >>> client.set('/doctest/watch')
        <EtcdEvent: create@/doctest/watch>

        :type key: str
        :type consistent: bool
        :type quorum: bool
        :type recursive: bool
        :type sorted: bool
        :type prev_index: int
        :rtype: EtcdEvent
        ")
                        (reparse-symbol indented_block_body) [7414 8279])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8292 8296])
                            ("key" variable nil (reparse-symbol function_parameters) [8298 8301])
                            ("value" variable nil (reparse-symbol function_parameters) [8303 8308])
                            ("ttl" variable nil (reparse-symbol function_parameters) [8313 8316])
                            ("prev_exist" variable nil (reparse-symbol function_parameters) [8323 8333])
                            ("prev_value" variable nil (reparse-symbol function_parameters) [8340 8350])
                            ("prev_index" variable nil (reparse-symbol function_parameters) [8357 8367])
                            ("directory" variable nil (reparse-symbol function_parameters) [8374 8383]))                          
                        :documentation "Set the value of a node.

        >>> client = EtcdClient()
        >>> client.set('/doctest/set', 'doctest')
        <EtcdEvent: create@/doctest/set>
        >>> event = client.get('/doctest/set')
        >>> event.node.value
        'doctest'

        :type key: str
        :type value: str
        :type ttl: int
        :type prev_exist: bool
        :type prev_value: str
        :type prev_index: int
        :type directory: bool
        :rtype: EtcdEvent
        ")
                        (reparse-symbol indented_block_body) [8284 9505])
                    ("refresh" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9522 9526])
                            ("key" variable nil (reparse-symbol function_parameters) [9528 9531])
                            ("ttl" variable nil (reparse-symbol function_parameters) [9533 9536]))                          
                        :documentation "
        Refreshes a value in etcd, without notifying any watchers.

        >>> client = EtcdClient()
        >>> client.set('/doctest/refresh', 'doctest')
        <EtcdEvent: set@/doctest/refresh>
        >>> client.refresh('/doctest/refresh', ttl=5)
        <EtcdEvent: update@/doctest/refresh>

        :type key: str
        :type ttl: int
        ")
                        (reparse-symbol indented_block_body) [9510 10026])
                    ("delete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10042 10046])
                            ("key" variable nil (reparse-symbol function_parameters) [10048 10051])
                            ("prev_value" variable nil (reparse-symbol function_parameters) [10053 10063])
                            ("prev_index" variable nil (reparse-symbol function_parameters) [10070 10080])
                            ("directory" variable nil (reparse-symbol function_parameters) [10087 10096])
                            ("recursive" variable nil (reparse-symbol function_parameters) [10103 10112]))                          
                        :documentation "Delete a node.

        >>> client = EtcdClient()
        >>> client.set('/doctest/delete', 'doctest')
        <EtcdEvent: create@/doctest/delete>
        >>> event = client.delete('/doctest/delete')
        >>> event.action == ACTION_DELETE
        True

        :type key: str
        :type prev_value: str
        :type prev_index: int
        :type directory: bool
        :type recursive: bool
        :rtype: EtcdEvent
        ")
                        (reparse-symbol indented_block_body) [10031 10926])
                    ("get_watcher" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10947 10951])
                            ("key" variable nil (reparse-symbol function_parameters) [10953 10956])
                            ("recursive" variable nil (reparse-symbol function_parameters) [10958 10967])
                            ("_use_mux" variable nil (reparse-symbol function_parameters) [10975 10983]))                          
                        :documentation "
        Returns a new EtcdWatcher for a given key.

        :type key: str
        :type recursive: bool
        :type _use_mux: bool
        :rtype: EtcdWatcher
        ")
                        (reparse-symbol indented_block_body) [10931 11271])
                    ("send_request" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11293 11297])
                            ("method" variable nil (reparse-symbol function_parameters) [11299 11305])
                            ("key" variable nil (reparse-symbol function_parameters) [11307 11310])
                            ("params" variable nil (reparse-symbol function_parameters) [11312 11318])
                            ("jitter_timeout" variable nil (reparse-symbol function_parameters) [11320 11334]))                          
                        :documentation "Send request to Etcd.

        :type method: str
        :type key: str
        :type params: dict
        :rtype: EtcdEvent
        ")
                        (reparse-symbol indented_block_body) [11276 13408]))                  
                :type "class")
                nil [5321 13408])
            ("HTTPConnection" type
               (:superclasses ("six.moves.http_client.HTTPConnection")
                :members 
                  ( ("_send_output" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13491 13495])
                            ("message_body" variable nil (reparse-symbol function_parameters) [13497 13509])
                            ("encode_chunked" variable nil (reparse-symbol function_parameters) [13516 13530]))                          
                        :documentation "Sends the headers + body in one chunk, only supports bytes message bodies.")
                        (reparse-symbol indented_block_body) [13474 14012]))                  
                :type "class")
                nil [13410 14012])
            ("HTTPHandler" type
               (:superclasses ("six.moves.urllib.request.HTTPHandler")
                :members 
                  ( ("http_open" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14089 14093])
                            ("req" variable nil (reparse-symbol function_parameters) [14095 14098]))                          )
                        (reparse-symbol indented_block_body) [14075 14150]))                  
                :type "class")
                nil [14014 14150])
            ("if" code nil nil [14152 14289]))          
      :file "__init__.py"
      :pointmax 14289
      :fsize 14288
      :lastmodtime '(24250 56501 650686 694000)
      :unmatched-syntax '((INDENT_BLOCK 13369 . 13408) (NEWLINE 13368 . 13369) (COLON 13367 . 13368) (AS 13363 . 13365) (EXCEPT 13320 . 13326) (INDENT_BLOCK 13198 . 13312) (NEWLINE 13197 . 13198) (COLON 13196 . 13197) (AS 13192 . 13194) (EXCEPT 13153 . 13159) (INDENT_BLOCK 13094 . 13145) (NEWLINE 13093 . 13094) (COLON 13092 . 13093) (TRY 11540 . 11543) (AS 13088 . 13090) (NAME 5917 . 5925) (IF 5937 . 5939) (ELSE 5961 . 5965) (NAME 5839 . 5847) (IF 5859 . 5861) (ELSE 5883 . 5887)))
    (semanticdb-table "semanticdb-table-1ffd5d63dbc0"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("json" include nil nil [41 52])
            ("gevent" include nil nil [54 67])
            ("six" include nil nil [68 78])
            ("gevent.lock" include nil nil [79 108])
            ("hash_ring" include nil nil [109 153])
            ("discord_common" include nil nil [155 186])
            ("EtcdHashRingMember" type
               (:superclasses ("HashRingNode")
                :members 
                  ( ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [246 250]))                          )
                        (reparse-symbol indented_block_body) [233 357]))                  
                :type "class")
                nil [189 357])
            ("EtcdHashRing" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        :type etcd_client: etcd.EtcdClient
        :type key: str
        \"\"\"" code nil (reparse-symbol indented_block_body) [463 544])
                            ("self" variable nil (reparse-symbol indented_block_body) [553 583])
                            ("self" variable nil (reparse-symbol indented_block_body) [592 606])
                            ("self" variable nil (reparse-symbol indented_block_body) [616 636])
                            ("self" variable nil (reparse-symbol indented_block_body) [646 666])
                            ("self" variable nil (reparse-symbol indented_block_body) [675 695])
                            ("self" variable nil (reparse-symbol indented_block_body) [704 753])
                            ("self" variable nil (reparse-symbol indented_block_body) [762 805]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [404 408])
                            ("etcd_client" variable nil (reparse-symbol function_parameters) [410 421])
                            ("key" variable nil (reparse-symbol function_parameters) [423 426])
                            ("default_num_replicas" variable nil (reparse-symbol function_parameters) [428 448]))                          
                        :documentation "
        :type etcd_client: etcd.EtcdClient
        :type key: str
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [391 806])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [824 828]))                          )
                        (reparse-symbol indented_block_body) [811 1013])
                    ("__len__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1030 1034]))                          )
                        (reparse-symbol indented_block_body) [1018 1103])
                    ("select" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1119 1123])
                            ("key" variable nil (reparse-symbol function_parameters) [1125 1128])
                            ("secondaries" variable nil (reparse-symbol function_parameters) [1130 1141]))                          
                        :documentation "Selects a member in the ring based on key.

        :type key: str|int|unicode
        :type secondaries: int
        :rtype: str|[str]
        ")
                        (reparse-symbol indented_block_body) [1108 1943])
                    ("_select_one_override" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1973 1977])
                            ("key" variable nil (reparse-symbol function_parameters) [1979 1982]))                          )
                        (reparse-symbol indented_block_body) [1948 2158])
                    ("_select_overrides" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2185 2189])
                            ("key" variable nil (reparse-symbol function_parameters) [2191 2194]))                          )
                        (reparse-symbol indented_block_body) [2163 2293])
                    ("find_member_by_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2322 2326])
                            ("member_to_find" variable nil (reparse-symbol function_parameters) [2328 2342]))                          )
                        (reparse-symbol indented_block_body) [2298 2483])
                    ("add" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2496 2500])
                            ("members" variable nil (reparse-symbol function_parameters) [2502 2510]))                          )
                        (reparse-symbol indented_block_body) [2488 2852])
                    ("remove" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2868 2872])
                            ("members" variable nil (reparse-symbol function_parameters) [2874 2882]))                          )
                        (reparse-symbol indented_block_body) [2857 3255])
                    ("_persist_topology" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3282 3286]))                          )
                        (reparse-symbol indented_block_body) [3260 3523])
                    ("members" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3554 3558]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3528 3622])
                    ("overrides" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3655 3659]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3627 3725])
                    ("overrides" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3766 3770])
                            ("overrides" variable nil (reparse-symbol function_parameters) [3772 3781]))                          
                        :decorators 
                          ( ("overrides.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3730 4045])
                    ("_ensure_watching" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4071 4075]))                          )
                        (reparse-symbol indented_block_body) [4050 4563])
                    ("_handle_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4586 4590])
                            ("event" variable nil (reparse-symbol function_parameters) [4592 4597]))                          )
                        (reparse-symbol indented_block_body) [4568 4849])
                    ("_watch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4865 4869])
                            ("watcher" variable nil (reparse-symbol function_parameters) [4871 4878]))                          )
                        (reparse-symbol indented_block_body) [4854 5073])
                    ("_merge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5089 5093])
                            ("topology" variable nil (reparse-symbol function_parameters) [5095 5103]))                          )
                        (reparse-symbol indented_block_body) [5078 5349]))                  
                :type "class")
                nil [359 5349])
            ("EtcdHashRingTopology" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" code nil (reparse-symbol indented_block_body) [5449 5477])
                            ("self" code nil (reparse-symbol indented_block_body) [5486 5518]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5404 5408])
                            ("members" variable nil (reparse-symbol function_parameters) [5410 5417])
                            ("overrides" variable nil (reparse-symbol function_parameters) [5424 5433]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5391 5519])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5537 5541]))                          )
                        (reparse-symbol indented_block_body) [5524 5648])
                    ("from_value" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("value" variable nil (reparse-symbol function_parameters) [5686 5691])
                            ("default_num_replicas" variable nil (reparse-symbol function_parameters) [5693 5713]))                          
                        :documentation "
        creates a ring topology from \"value\".

        this method accepts several inputs, and will transform them appropriately:

        1. a list of `EtcdHashRingMember` objects.
        2. a list of `{name, num_replicas}` dicts.
        3. a list of `str`, representing member names. `default_num_replicas` will be used.
        4. a \"v1\" ring topology definition, which takes the form of:

        {
            \"schema\": \"v1\",
            \"members\": [
                { \"name\": \"guilds-1:3001\", \"num_replicas\": 512 },
                { \"name\": \"guilds-2:3001\", \"num_replicas\": 512 },
                { \"name\": \"sickbay0:3001\", \"num_replicas\": 0 },
                { \"name\": \"sickbay1:3001\", \"num_replicas\": 0 }
            ],
            \"overrides\": [
                [100, \"sickbay0:3001\", \"sickbay1:3001\"]
            ]
        }
        ")
                        (reparse-symbol indented_block_body) [5653 7252])
                    ("from_members" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("value" variable nil (reparse-symbol function_parameters) [7292 7297])
                            ("default_num_replicas" variable nil (reparse-symbol function_parameters) [7299 7319]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7257 7454])
                    ("read_members" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("members" variable nil (reparse-symbol function_parameters) [7494 7501])
                            ("default_num_replicas" variable nil (reparse-symbol function_parameters) [7503 7523]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7459 7628])
                    ("read_member" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("value" variable nil (reparse-symbol function_parameters) [7667 7672])
                            ("default_num_replicas" variable nil (reparse-symbol function_parameters) [7674 7694]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7633 8363])
                    ("read_overrides" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("overrides" variable nil (reparse-symbol function_parameters) [8405 8414]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [8368 8511])
                    ("read_override" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("items" variable nil (reparse-symbol function_parameters) [8552 8557]))                          
                        :documentation "
        :param items: a list of override items, prefixed with the key (`[key, values...]`). this exists because we
            cannot make overrides a map because json does not support non-string-keys.
        ")
                        (reparse-symbol indented_block_body) [8516 8961])
                    ("to_json" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("members" variable nil (reparse-symbol function_parameters) [8996 9003])
                            ("overrides" variable nil (reparse-symbol function_parameters) [9005 9014]))                          
                        :documentation "
        writes `members` and `overrides` to the json schema that store into etcd.

        # remarks.

        for maximum backwards compatibility, we use the v0 \"old-style\" schema if there are no overrides, and the v1
        schema if there are overrides.

        the specific \"v0\", \"v1\" and legacy formats are described above in in `def from_value(..)`.
        ")
                        (reparse-symbol indented_block_body) [8966 9836])
                    ("write_member" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("value" variable nil (reparse-symbol function_parameters) [9876 9881]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [9841 10252])
                    ("write_override" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("values" variable nil (reparse-symbol function_parameters) [10294 10300]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10257 10431]))                  
                :type "class")
                nil [5351 10431])
            ("_ensure_strings_are_bytes" function (:arguments 
              ( ("value" variable nil (reparse-symbol function_parameters) [10463 10468]))              ) nil [10433 10550])
            ("_ensure_bytes_are_strings" function (:arguments 
              ( ("value" variable nil (reparse-symbol function_parameters) [10582 10587]))              ) nil [10552 10671]))          
      :file "ring.py"
      :pointmax 10671
      :fsize 10670
      :lastmodtime '(24250 56501 651167 776000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1ffd5d70bb48"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("json" include nil nil [41 52])
            ("gevent" include nil nil [54 67])
            ("gevent.lock" include nil nil [68 97])
            ("discord_common" include nil nil [99 130])
            ("ReadOnlyEtcdSet" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" code nil (reparse-symbol indented_block_body) [312 359])
                            ("self" variable nil (reparse-symbol indented_block_body) [368 393])
                            ("self" variable nil (reparse-symbol indented_block_body) [402 428])
                            ("self" variable nil (reparse-symbol indented_block_body) [437 461])
                            ("self" variable nil (reparse-symbol indented_block_body) [470 487])
                            ("self" variable nil (reparse-symbol indented_block_body) [496 516])
                            ("self" variable nil (reparse-symbol indented_block_body) [525 554])
                            ("self" variable nil (reparse-symbol indented_block_body) [563 583])
                            ("self" variable nil (reparse-symbol indented_block_body) [592 633])
                            ("self" variable nil (reparse-symbol indented_block_body) [642 683])
                            ("self" variable nil (reparse-symbol indented_block_body) [692 721])
                            ("if" code nil (reparse-symbol indented_block_body) [731 769]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [190 194])
                            ("etcd_key" variable nil (reparse-symbol function_parameters) [196 204])
                            ("etcd_client" variable nil (reparse-symbol function_parameters) [206 217])
                            ("lazy" variable nil (reparse-symbol function_parameters) [224 228])
                            ("item_encode_hook" variable nil (reparse-symbol function_parameters) [235 251])
                            ("item_decode_hook" variable nil (reparse-symbol function_parameters) [258 274])
                            ("serializer" variable nil (reparse-symbol function_parameters) [281 291]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [168 769])
                    ("watch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [784 788]))                          
                        :documentation "
        Starts the watcher for the ETCd key.
        ")
                        (reparse-symbol indented_block_body) [774 1066])
                    ("stop_watching" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1089 1093]))                          
                        :documentation "
        Kills the watcher that's watching the key. The set may then be stale.
        ")
                        (reparse-symbol indented_block_body) [1071 1363])
                    ("_set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1391 1395]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1368 1487])
                    ("_set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1518 1522])
                            ("new_set" variable nil (reparse-symbol function_parameters) [1524 1531]))                          
                        :decorators 
                          ( ("_set.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1492 1599])
                    ("_loop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1614 1618]))                          )
                        (reparse-symbol indented_block_body) [1604 1954])
                    ("_serialize_item" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2018 2022])
                            ("item" variable nil (reparse-symbol function_parameters) [2024 2028]))                          )
                        (reparse-symbol indented_block_body) [1998 2135])
                    ("_deserialize_item" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2201 2205])
                            ("item" variable nil (reparse-symbol function_parameters) [2207 2211]))                          )
                        (reparse-symbol indented_block_body) [2179 2318])
                    ("_load" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2333 2337])
                            ("force" variable nil (reparse-symbol function_parameters) [2339 2344]))                          )
                        (reparse-symbol indented_block_body) [2323 2622])
                    ("_handle_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2645 2649])
                            ("event" variable nil (reparse-symbol function_parameters) [2651 2656]))                          )
                        (reparse-symbol indented_block_body) [2627 2848])
                    ("_deserialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2870 2874])
                            ("value" variable nil (reparse-symbol function_parameters) [2876 2881]))                          )
                        (reparse-symbol indented_block_body) [2853 3042])
                    ("__contains__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3064 3068])
                            ("item" variable nil (reparse-symbol function_parameters) [3070 3074]))                          )
                        (reparse-symbol indented_block_body) [3047 3110])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3128 3132]))                          )
                        (reparse-symbol indented_block_body) [3115 3166])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3182 3186])
                            ("other" variable nil (reparse-symbol function_parameters) [3188 3193]))                          )
                        (reparse-symbol indented_block_body) [3171 3328]))                  
                :type "class")
                nil [133 3328])
            ("EtcdSet" type
               (:superclasses ("ReadOnlyEtcdSet")
                :members 
                  ( ("add" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3374 3378])
                            ("item" variable nil (reparse-symbol function_parameters) [3380 3384]))                          
                        :documentation "
        Atomically adds an item to a set and returns True/False whether or not the item was added.
        ")
                        (reparse-symbol indented_block_body) [3366 3597])
                    ("discard" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3614 3618])
                            ("item" variable nil (reparse-symbol function_parameters) [3620 3624]))                          
                        :documentation "
        Atomically removes an item from the set and returns True/False whether or not the item was discarded.
        ")
                        (reparse-symbol indented_block_body) [3602 3848])
                    ("clear" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3863 3867]))                          
                        :documentation "
        Atomically clears the set, returning True if the set had items prior to being cleared.
        ")
                        (reparse-symbol indented_block_body) [3853 4055])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4071 4075])
                            ("updater_fn" variable nil (reparse-symbol function_parameters) [4077 4087]))                          
                        :documentation "
        Atomically updates the set by using an updater_fn, with the old set, that is expected to return a new set.
        The `updater_fn` may be called multiple times if there was a change to the underlying set while the updater
        function was running.

        :rtype None
        ")
                        (reparse-symbol indented_block_body) [4060 4700])
                    ("_serialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4720 4724])
                            ("items" variable nil (reparse-symbol function_parameters) [4726 4731]))                          )
                        (reparse-symbol indented_block_body) [4705 4882])
                    ("_cas_atomic_update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4910 4914])
                            ("before_state" variable nil (reparse-symbol function_parameters) [4916 4928])
                            ("updater" variable nil (reparse-symbol function_parameters) [4930 4937]))                          )
                        (reparse-symbol indented_block_body) [4887 5745]))                  
                :type "class")
                nil [3330 5745]))          
      :file "set.py"
      :pointmax 5745
      :fsize 5744
      :lastmodtime '(24250 56501 651340 449000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1ffd5e13de10"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("json" include nil nil [41 52])
            ("collections" include nil nil [53 100])
            ("multiprocessing" include nil nil [101 134])
            ("gevent" include nil nil [136 149])
            ("discord_common" include nil nil [151 182])
            ("discord_common.etcd" include nil nil [183 225])
            ("MYPY" variable nil nil [438 450])
            ("if" code nil nil [451 519])
            ("ReadOnlyEtcdDict" type
               (:superclasses ("Mapping")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" code nil (reparse-symbol indented_block_body) [705 752])
                            ("self" variable nil (reparse-symbol indented_block_body) [761 786])
                            ("self" variable nil (reparse-symbol indented_block_body) [795 812])
                            ("self" variable nil (reparse-symbol indented_block_body) [821 841])
                            ("self" variable nil (reparse-symbol indented_block_body) [850 870])
                            ("self" variable nil (reparse-symbol indented_block_body) [879 908])
                            ("self" variable nil (reparse-symbol indented_block_body) [952 981])
                            ("self" variable nil (reparse-symbol indented_block_body) [990 1014])
                            ("self" variable nil (reparse-symbol indented_block_body) [1047 1072])
                            ("self" variable nil (reparse-symbol indented_block_body) [1081 1100])
                            ("if" code nil (reparse-symbol indented_block_body) [1158 1196]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [571 575])
                            ("etcd_key" variable nil (reparse-symbol function_parameters) [577 585])
                            ("etcd_client" variable nil (reparse-symbol function_parameters) [587 598])
                            ("lazy" variable nil (reparse-symbol function_parameters) [605 609])
                            ("serializer" variable nil (reparse-symbol function_parameters) [616 626]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [558 1196])
                    ("watch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1211 1215]))                          
                        :documentation "
        Starts the watcher for the ETCd key.
        ")
                        (reparse-symbol indented_block_body) [1201 1520])
                    ("stop_watching" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1543 1547]))                          
                        :documentation "
        Kills the watcher that's watching the key. The set may then be stale.
        ")
                        (reparse-symbol indented_block_body) [1525 1817])
                    ("_dict" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1846 1850]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1822 1980])
                    ("_dict" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2013 2017])
                            ("new_dict" variable nil (reparse-symbol function_parameters) [2019 2027]))                          
                        :decorators 
                          ( ("_dict.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1985 2097])
                    ("_loop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2112 2116]))                          )
                        (reparse-symbol indented_block_body) [2102 2456])
                    ("_handle_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2479 2483])
                            ("event" variable nil (reparse-symbol function_parameters) [2485 2490]))                          )
                        (reparse-symbol indented_block_body) [2461 2794])
                    ("_load" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2809 2813])
                            ("force" variable nil (reparse-symbol function_parameters) [2815 2820]))                          )
                        (reparse-symbol indented_block_body) [2799 3141])
                    ("_notify_watchers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3167 3171]))                          )
                        (reparse-symbol indented_block_body) [3146 3245])
                    ("add_watcher" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3266 3270])
                            ("watcher" variable nil (reparse-symbol function_parameters) [3272 3279]))                          )
                        (reparse-symbol indented_block_body) [3250 3380])
                    ("__len__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3397 3401]))                          )
                        (reparse-symbol indented_block_body) [3385 3435])
                    ("__contains__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3457 3461])
                            ("item" variable nil (reparse-symbol function_parameters) [3463 3467]))                          )
                        (reparse-symbol indented_block_body) [3440 3504])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3522 3526]))                          )
                        (reparse-symbol indented_block_body) [3509 3561])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3582 3586])
                            ("item" variable nil (reparse-symbol function_parameters) [3588 3592]))                          )
                        (reparse-symbol indented_block_body) [3566 3627])
                    ("copy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3641 3645]))                          
                        :documentation "Returns a shallow copy of the underlying dict.")
                        (reparse-symbol indented_block_body) [3632 3779]))                  
                :type "class")
                nil [521 3779])
            ("EtcdDict" type
               (:superclasses ("ReadOnlyEtcdDict" "MutableMapping")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3918 3965])
                            ("self" variable nil (reparse-symbol indented_block_body) [3974 4008]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3848 3852])
                            ("args" variable nil (reparse-symbol function_parameters) [3854 3859])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3861 3869]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3835 4009])
                    ("__delitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4030 4034])
                            ("key" variable nil (reparse-symbol function_parameters) [4036 4039]))                          )
                        (reparse-symbol indented_block_body) [4014 4094])
                    ("__setitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4115 4119])
                            ("key" variable nil (reparse-symbol function_parameters) [4121 4124])
                            ("value" variable nil (reparse-symbol function_parameters) [4126 4131]))                          )
                        (reparse-symbol indented_block_body) [4099 4190])
                    ("clear" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4205 4209]))                          )
                        (reparse-symbol indented_block_body) [4195 4260])
                    ("_persist" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4278 4282]))                          )
                        (reparse-symbol indented_block_body) [4265 4414])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4433 4437]))                          )
                        (reparse-symbol indented_block_body) [4419 4504])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4522 4526])
                            ("exc_type" variable nil (reparse-symbol function_parameters) [4528 4536])
                            ("exc_val" variable nil (reparse-symbol function_parameters) [4538 4545])
                            ("exc_tb" variable nil (reparse-symbol function_parameters) [4547 4553]))                          )
                        (reparse-symbol indented_block_body) [4509 4624])
                    ("replace_with" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4646 4650])
                            ("new_dict" variable nil (reparse-symbol function_parameters) [4652 4660]))                          )
                        (reparse-symbol indented_block_body) [4629 4800]))                  
                :type "class")
                nil [3781 4800]))          
      :file "dict.py"
      :pointmax 4800
      :fsize 4799
      :lastmodtime '(24250 56501 650844 281000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1ffd5c6ffb00"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("os" include nil nil [41 50])
            ("uuid" include nil nil [51 62])
            ("gevent" include nil nil [64 77])
            ("discord_common" include nil nil [79 110])
            ("LOCK_DIR_KEY" variable nil nil [112 135])
            ("DistributedLock" type
               (:documentation "
    Distributed lock powered by Etcd.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        Create a new lock

        :type key: str
        :type ttl: int
        :type etcd_client: etcd.EtcdClient
        \"\"\"" code nil (reparse-symbol indented_block_body) [286 417])
                            ("self" variable nil (reparse-symbol indented_block_body) [426 440])
                            ("self" variable nil (reparse-symbol indented_block_body) [449 463])
                            ("self" variable nil (reparse-symbol indented_block_body) [472 489])
                            ("self" code nil (reparse-symbol indented_block_body) [498 549]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [241 245])
                            ("key" variable nil (reparse-symbol function_parameters) [247 250])
                            ("ttl" variable nil (reparse-symbol function_parameters) [252 255])
                            ("etcd_client" variable nil (reparse-symbol function_parameters) [259 270]))                          
                        :documentation "
        Create a new lock

        :type key: str
        :type ttl: int
        :type etcd_client: etcd.EtcdClient
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [228 550])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [569 573]))                          )
                        (reparse-symbol indented_block_body) [555 606])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [657 661])
                            ("type" variable nil (reparse-symbol function_parameters) [663 667])
                            ("value" variable nil (reparse-symbol function_parameters) [669 674])
                            ("traceback" variable nil (reparse-symbol function_parameters) [676 685]))                          )
                        (reparse-symbol indented_block_body) [644 711])
                    ("_lock_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [745 749]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [716 804])
                    ("locked" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [820 824]))                          )
                        (reparse-symbol indented_block_body) [809 1026])
                    ("acquire" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1043 1047])
                            ("blocking" variable nil (reparse-symbol function_parameters) [1049 1057])
                            ("timeout" variable nil (reparse-symbol function_parameters) [1064 1071]))                          
                        :documentation "
        Acquire a lock, blocking or non-blocking.

        :type blocking: bool
        :type timeout: int
        :rtype: bool
        ")
                        (reparse-symbol indented_block_body) [1031 1923])
                    ("release" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1940 1944]))                          
                        :documentation "
        Release the lock
        ")
                        (reparse-symbol indented_block_body) [1928 2209]))                  
                :type "class")
                nil [138 2209]))          
      :file "locking.py"
      :pointmax 2209
      :fsize 2208
      :lastmodtime '(24250 56501 650988 715000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1ffd5d004aa8"
      :major-mode python-mode
      :tags 
        '( ("logging" include nil nil [1 15])
            ("time" include nil nil [16 27])
            ("discord_common.backoff" include nil nil [29 71])
            ("log" variable nil nil [73 112])
            ("BaseWatcher" type
               (:documentation "The base watcher interface that all other watchers should implement."
                :superclasses ("object")
                :members 
                  ( ("begin_watching" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [245 249]))                          
                        :documentation "
        Call this to begin watching a key. Returning the initial sync event. This is useful if you want to perform
        the initial sync of the key with the data structure in a blocking fashion, before passing the watcher
        off into a greenlet to continue keeping the data structure up to date. It is not mandatory to call this
        function before calling `continue_watching`. If not called, `continue_watching` will just get the first
        initial sync event.

        Example:
        ```
        def handle_event(event):
            if isinstance(event, FullSyncOne):
                print('value set to: %r' % event.value)
            elif isinstance(event, FullSyncOneNoKey):
                print('key was deleted :(')

        def continue_watching(watcher):
            for event in watcher.continue_watching():
                handle_event(event)

        # Sets up the watcher for the key `foo`.
        watcher = client.get_watcher('foo')
        # Handles the initial create event in a blocking manner.
        handle_event(watcher.begin_watching())
        # Spawns the greenlet to continue watching the key and handling updates.
        gevent.spawn(continue_watching, watcher)
        ```


        If this is a recursive watcher, the return type is always FullSyncRecursive(), with an empty
        items array if the key does not exist.

        If it is a non-recursive watcher, the return type is either FullSyncOne() or FullSyncOneNoKey() depending
        on whether or not the key exists.

        :rtype: FullSyncRecursive|FullSyncOne|FullSyncOneNoKey
        ")
                        (reparse-symbol indented_block_body) [226 1901])
                    ("continue_watching" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1928 1932]))                          
                        :documentation "
        Returns an iterator, that when iterated over, continues the watch of a given key. This function does not spawn
        a greenlet, and if the iterator is interrupted, the watch ends. This means that it is safe to run this in a
        greenlet, and simply kill the greenlet in order to kill the watcher. This watcher will retry its watches
        infinitely, until you stop the iterator, attempting to recover from all etcd errors it can, including
        etcd_index_cleared, by restarting and performing a full sync.

        If this is a recursive watcher, the following events will be yielded:
            - FullSyncRecursive(): When the key is either deleted, or a full sync happens due to etcd_index_cleared
              error. If you are watching the key recursively, you should throw away all existing data you have, and
              fully synchronize to this state. If the key is deleted, a FullSyncRecursive() with an empty items
              array will be yielded.
            - IncrementalSyncUpsert(): A sub-key is created or updated.
            - IncrementalSyncDelete(): A sub-key is deleted.

        If this is a non-recursive watcher, the following events will be yielded:
            - FullSyncOne(): The key was updated with a value.
            - FullSyncOneNoKey(): The key was deleted, or didn't exist when the watch tried to start.

        Example:
        ```
        watcher = client.get_watcher('hello', recursive=False)
        for event in watcher.continue_watching():
            if isinstance(event, FullSyncOne):
                print('value set to: %r' % event.value)
            elif isinstance(event, FullSyncOneNoKey):
                print('key was deleted :(')
        ```
        ")
                        (reparse-symbol indented_block_body) [1906 3718]))                  
                :type "class")
                nil [115 3718])
            ("EtcdWatcherState" type
               (:documentation "
    Represents the state of the etcd watcher.
    "
                :superclasses ("object")
                :members 
                  ( ("STOPPED" variable nil (reparse-symbol indented_block_body) [3849 3868])
                    ("WAIT" variable nil (reparse-symbol indented_block_body) [3967 3980])
                    ("SYNC" variable nil (reparse-symbol indented_block_body) [4204 4217]))                  
                :type "class")
                nil [3720 4218])
            ("EtcdWatcher" type
               (:documentation "
    Implementation of the base watcher interface that talks directly to etcd.
    "
                :superclasses ("BaseWatcher")
                :members 
                  ( ("_get_initial_event" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("key" variable nil (reparse-symbol function_parameters) [4392 4395])
                            ("recursive" variable nil (reparse-symbol function_parameters) [4397 4406])
                            ("etcd_client" variable nil (reparse-symbol function_parameters) [4408 4419]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4351 5092])
                    ("__init__" function
                       (:suite 
                          ( ("discord_common" include nil (reparse-symbol indented_block_body) [5192 5223])
                            ("self" variable nil (reparse-symbol indented_block_body) [5233 5248])
                            ("self" variable nil (reparse-symbol indented_block_body) [5257 5276])
                            ("self" variable nil (reparse-symbol indented_block_body) [5285 5312])
                            ("self" code nil (reparse-symbol indented_block_body) [5321 5368])
                            ("self" variable nil (reparse-symbol indented_block_body) [5377 5415])
                            ("self" variable nil (reparse-symbol indented_block_body) [5424 5473])
                            ("if" code nil (reparse-symbol indented_block_body) [5482 5620]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5110 5114])
                            ("key" variable nil (reparse-symbol function_parameters) [5116 5119])
                            ("index" variable nil (reparse-symbol function_parameters) [5121 5126])
                            ("recursive" variable nil (reparse-symbol function_parameters) [5133 5142])
                            ("etcd_client" variable nil (reparse-symbol function_parameters) [5150 5161])
                            ("_use_mux" variable nil (reparse-symbol function_parameters) [5168 5176]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5097 5620])
                    ("begin_watching" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5644 5648]))                          )
                        (reparse-symbol indented_block_body) [5625 5997])
                    ("continue_watching" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6024 6028]))                          )
                        (reparse-symbol indented_block_body) [6002 7439])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7457 7461]))                          )
                        (reparse-symbol indented_block_body) [7444 7651])
                    ("_set_state" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7671 7675])
                            ("state" variable nil (reparse-symbol function_parameters) [7677 7682]))                          )
                        (reparse-symbol indented_block_body) [7656 7776])
                    ("_do_sync" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7794 7798]))                          )
                        (reparse-symbol indented_block_body) [7781 8476])
                    ("_do_watch_key" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8499 8503]))                          )
                        (reparse-symbol indented_block_body) [8481 10800])
                    ("_translate_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10826 10830])
                            ("event" variable nil (reparse-symbol function_parameters) [10832 10837]))                          )
                        (reparse-symbol indented_block_body) [10805 11992]))                  
                :type "class")
                nil [4220 11992])
            ("PassthruMux" type
               (:superclasses ("object")
                :members 
                  ( ("reset_with_initial_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12054 12058])
                            ("event" variable nil (reparse-symbol function_parameters) [12060 12065]))                          )
                        (reparse-symbol indented_block_body) [12025 12081])
                    ("dedupe_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12103 12107])
                            ("event" variable nil (reparse-symbol function_parameters) [12109 12114]))                          )
                        (reparse-symbol indented_block_body) [12086 12137]))                  
                :type "class")
                nil [11994 12137])
            ("WatchMux" type
               (:documentation "Watch mux takes a stream of events and de-duplicates them, allowing downstream handlers to not
    have to worry about handling events that net in no actual change of data.

    That is to say, EtcdWatcher would very much emit redundant duplicate events when full-syncs happen. This
    processes the event stream and drops events which would otherwise be considered duplicate.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [12589 12612]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12574 12578]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [12561 12613])
                    ("reset_with_initial_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12647 12651])
                            ("event" variable nil (reparse-symbol function_parameters) [12653 12658]))                          )
                        (reparse-symbol indented_block_body) [12618 12694])
                    ("dedupe_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12716 12720])
                            ("event" variable nil (reparse-symbol function_parameters) [12722 12727]))                          )
                        (reparse-symbol indented_block_body) [12699 12829]))                  
                :type "class")
                nil [12139 12829])
            ("RecursiveWatchMux" type
               (:documentation "Recursive watch mux takes a stream of events and deduplicates them in the context of a recursively watched
    directory.

    With recursive watches, would otherwise emit many redundant full-syncs. This processes all those events, and
    drops, or transforms events into more minimal forms. For example, if a full-sync would net in one key being added,
    and another key being removed, it'll just transform them into their respective incremental syncs.
    "
                :superclasses ("object")
                :members 
                  ( ("_DOES_NOT_EXIST" variable nil (reparse-symbol indented_block_body) [13341 13367])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [13401 13423]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13386 13390]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [13373 13424])
                    ("reset_with_initial_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13458 13462])
                            ("event" variable nil (reparse-symbol function_parameters) [13464 13469]))                          )
                        (reparse-symbol indented_block_body) [13429 13588])
                    ("dedupe_event" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13610 13614])
                            ("event" variable nil (reparse-symbol function_parameters) [13616 13621]))                          )
                        (reparse-symbol indented_block_body) [13593 14432])
                    ("_synthesize_incremental_events_from_full_sync" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14487 14491])
                            ("event" variable nil (reparse-symbol function_parameters) [14493 14498]))                          )
                        (reparse-symbol indented_block_body) [14437 15460]))                  
                :type "class")
                nil [12831 15460])
            ("BaseEvent" type
               (:superclasses ("object")
                :members 
                  ( ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15502 15506])
                            ("other" variable nil (reparse-symbol function_parameters) [15508 15513]))                          )
                        (reparse-symbol indented_block_body) [15491 15601])
                    ("__ne__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15617 15621])
                            ("other" variable nil (reparse-symbol function_parameters) [15623 15628]))                          )
                        (reparse-symbol indented_block_body) [15606 15664])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15682 15686]))                          )
                        (reparse-symbol indented_block_body) [15669 15798]))                  
                :type "class")
                nil [15462 15798])
            ("FullSyncOne" type
               (:documentation "A key is being set to a given value."
                :superclasses ("BaseEvent")
                :members 
                  ( ("from_node" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [15913 15916])
                            ("node" variable nil (reparse-symbol function_parameters) [15918 15922]))                          )
                        (reparse-symbol indented_block_body) [15882 15976])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [16021 16035])
                            ("self" variable nil (reparse-symbol indented_block_body) [16044 16062]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15994 15998])
                            ("key" variable nil (reparse-symbol function_parameters) [16000 16003])
                            ("value" variable nil (reparse-symbol function_parameters) [16005 16010]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [15981 16063])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16079 16083])
                            ("other" variable nil (reparse-symbol function_parameters) [16085 16090]))                          )
                        (reparse-symbol indented_block_body) [16068 16198]))                  
                :type "class")
                nil [15800 16198])
            ("FullSyncOneNoKey" type
               (:documentation "The key was deleted or does not exist."
                :superclasses ("BaseEvent")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [16322 16336]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16302 16306])
                            ("key" variable nil (reparse-symbol function_parameters) [16308 16311]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [16289 16337])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16353 16357])
                            ("other" variable nil (reparse-symbol function_parameters) [16359 16364]))                          )
                        (reparse-symbol indented_block_body) [16342 16442]))                  
                :type "class")
                nil [16200 16442])
            ("FullSyncRecursive" type
               (:documentation "Fully synchronize all values within a recursive watch."
                :superclasses ("BaseEvent")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [16585 16603]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16563 16567])
                            ("items" variable nil (reparse-symbol function_parameters) [16569 16574]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [16550 16604])
                    ("values" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16620 16624]))                          )
                        (reparse-symbol indented_block_body) [16609 16672])
                    ("as_dict" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16689 16693]))                          )
                        (reparse-symbol indented_block_body) [16677 16748]))                  
                :type "class")
                nil [16444 16748])
            ("IncrementalSyncUpsert" type
               (:documentation "A key within a recursive watch was created or updated."
                :superclasses ("BaseEvent")
                :members 
                  ( ("from_node" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [16891 16894])
                            ("node" variable nil (reparse-symbol function_parameters) [16896 16900]))                          )
                        (reparse-symbol indented_block_body) [16860 16954])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [16999 17013])
                            ("self" variable nil (reparse-symbol indented_block_body) [17022 17040]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16972 16976])
                            ("key" variable nil (reparse-symbol function_parameters) [16978 16981])
                            ("value" variable nil (reparse-symbol function_parameters) [16983 16988]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [16959 17041]))                  
                :type "class")
                nil [16750 17041])
            ("IncrementalSyncDelete" type
               (:documentation "A key within a recursive watch was deleted."
                :superclasses ("BaseEvent")
                :members 
                  ( ("from_node" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [17173 17176])
                            ("node" variable nil (reparse-symbol function_parameters) [17178 17182])
                            ("prev_node" variable nil (reparse-symbol function_parameters) [17184 17193]))                          )
                        (reparse-symbol indented_block_body) [17142 17257])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [17307 17321])
                            ("self" variable nil (reparse-symbol indented_block_body) [17330 17358]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17275 17279])
                            ("key" variable nil (reparse-symbol function_parameters) [17281 17284])
                            ("prev_value" variable nil (reparse-symbol function_parameters) [17286 17296]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [17262 17359]))                  
                :type "class")
                nil [17043 17359]))          
      :file "watcher.py"
      :pointmax 17359
      :fsize 17358
      :lastmodtime '(24305 30407 856517 509000)
      :unmatched-syntax '((INDENT_BLOCK 10628 . 10800) (NEWLINE 10627 . 10628) (COLON 10626 . 10627) (EXCEPT 10610 . 10616) (INDENT_BLOCK 10581 . 10601) (NEWLINE 10580 . 10581) (COLON 10579 . 10580) (AS 10575 . 10577) (EXCEPT 10556 . 10562) (INDENT_BLOCK 9273 . 10547) (NEWLINE 9272 . 9273) (COLON 9271 . 9272) (TRY 8725 . 8728) (AS 9267 . 9269) (INDENT_BLOCK 8299 . 8476) (NEWLINE 8298 . 8299) (COLON 8297 . 8298) (EXCEPT 8281 . 8287) (INDENT_BLOCK 8252 . 8272) (NEWLINE 8251 . 8252) (COLON 8250 . 8251) (TRY 7849 . 7852) (AS 8246 . 8248) (NAME 7372 . 7376) (IF 7404 . 7406) (ELSE 7423 . 7427) (NAME 5507 . 5511) (IF 5539 . 5541) (ELSE 5552 . 5556) (INDENT_BLOCK 4869 . 5055) (NEWLINE 4868 . 4869) (COLON 4867 . 4868) (TRY 4471 . 4474) (AS 4863 . 4865))))
  :file "!Users!spen!repos!discord!discord_common!py!discord_common!etcd!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
